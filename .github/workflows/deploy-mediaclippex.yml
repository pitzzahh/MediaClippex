name: Deploy MediaClippex
on:
  push:
    tags:
      - "*.*.*.*"

env:
  PROJECT_PATH: "MediaClippex/MediaClippex.csproj"

jobs:
  deploy:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0"

      - name: Restore NuGet packages
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build the project
        run: dotnet publish ${{ env.PROJECT_PATH }} -c Release -r win-x64 --no-self-contained -p:PublishReadyToRun=true -p:DeleteExistingFiles=true

      - name: Zip Files
        run: |
          Compress-Archive -Path ${{ github.workspace }}/MediaClippex/bin/Release/net6.0-windows/win-x64/publish/* -DestinationPath ${{ github.workspace }}/MediaClippex/Update.zip

      - name: Deploy Update File
        id: deploy_artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MediaClippex-Update
          path: ${{ github.workspace }}/MediaClippex/Update.zip

      - name: Check if Changelog Exists
        id: check_changelog
        run: echo "::set-output name=exists::$(test -f changelog.md && echo true || echo false)"

      - name: Read Changelog
        id: read_changelog
        if: steps.check_changelog.outputs.exists == 'true'
        run: |
          echo "::set-output name=changelog::$(cat changelog.md)"

      - name: Format Changelog
        id: format_changelog
        if: steps.check_changelog.outputs.exists == 'true'
        run: |
          echo "::set-output name=formatted_changelog::$(awk '{print \"- \"$0}' changelog.md)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: ${{ steps.format_changelog.outputs.formatted_changelog }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/MediaClippex/Update.zip
          asset_name: Update.zip
          asset_content_type: application/zip
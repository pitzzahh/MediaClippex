name: "Deploy MediaClippex"
on:
  push:
    tags:
      - "*.*.*.*"

env:
  PROJECT_PATH: "MediaClippex/MediaClippex.csproj"

jobs:
  deploy:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "7.0"

      - name: Restore NuGet packages
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build and publish the project
        run: dotnet publish ${{ env.PROJECT_PATH }} -c Release --self-contained -r win-x64 -p:PublishSingleFile=true -p:EnableCompressionInSingleFile=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true -p:DeleteExistingFiles=true

      - name: Deploy artifacts
        id: deploy_artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MediaClippex-Artifacts
          path: |
            ${{ github.workspace }}/MediaClippex/bin/Release/net7.0-windows/win-x64/publish/*.exe

      - name: Get pull requests
        id: get_pull_requests
        run: |
          PR_LIST=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls?state=closed")
          PR_BODY=""
          for pr in $(echo "${PR_LIST}" | jq -r '.[] | .number, .title'); do
            PR_BODY+="PR #$pr: $pr\n"
          done
          echo "::set-output name=pull_requests::${PR_BODY}"
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Version ${{ github.ref_name }}
          body: |
            Pull Requests:
            ${{ steps.get_pull_requests.outputs.pull_requests }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: MediaClippex/bin/Release/net7.0-windows/win-x64/publish/MediaClippex.exe
          asset_name: MediaClippex.exe
          asset_content_type: application/octet-stream

name: "Deploy MediaClippex"
on:
  push:
    tags:
      - MediaClippex/v*

env:
  PROJECT_PATH: "MediaClippex/MediaClippex.csproj"

jobs:
  deploy:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "7.0"

      - name: Restore NuGet packages
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build and publish the project
        run: dotnet publish ${{ env.PROJECT_PATH }} -c Release --self-contained -r win-x64 -p:PublishSingleFile=true -p:EnableCompressionInSingleFile=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true -p:DeleteExistingFiles=true

      - name: Deploy artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MediaClippex-Artifacts
          path: |
            ${{ github.workspace }}/MediaClippex/bin/Release/net7.0-windows/win-x64/publish/*.exe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: MediaClippex/bin/Release/net7.0-windows/win-x64/publish/MediaClippex.exe
          asset_name: MediaClippex.exe
          asset_content_type: application/octet-stream

      - name: Include ffmpeg.exe in Release
        uses: actions/github-script@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            const request = require('request');
            
            const downloadUrl = 'https://github.com/pitzzahh/MediaClippex/raw/main/MediaClippex/Resources/ffmpeg.exe';
            const assetName = 'ffmpeg.exe';
            const assetContentType = 'application/octet-stream';
            
            // Download the file
            request.get(downloadUrl)
              .on('response', function(response) {
                // Determine the file path to save
                const filePath = `${process.env.GITHUB_WORKSPACE}/${assetName}`;
            
                // Create a write stream to save the file
                const fileStream = fs.createWriteStream(filePath);
            
                // Pipe the response to the write stream
                response.pipe(fileStream);
            
                // Wait for the file to finish downloading
                fileStream.on('finish', function() {
                  fileStream.close();
            
                  // Upload the downloaded file as a release asset
                  github.repos.uploadReleaseAsset({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    release_id: context.payload.release.id,
                    name: assetName,
                    data: fs.readFileSync(filePath),
                    headers: {
                      'content-type': assetContentType,
                      'content-length': fs.statSync(filePath).size
                    }
                  });
                });
              });
